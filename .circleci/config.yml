version: 2
jobs:
  test-code:
    docker:
      - image: circleci/python:2.7-jessie-browsers
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "$KEY_ID"
      - run:
          name: Chmod to key
          command: chmod 400 $KEY_SSH
      - run:
          name: Install Ansible
          command: sudo pip install ansible
      - run:
          name: Install Boto
          command: sudo pip install boto
      - run:
          name: Download terraform
          command: wget https://releases.hashicorp.com/terraform/0.11.7/terraform_0.11.7_linux_amd64.zip
      - run:
          name: Unzip terraform binary
          command: unzip terraform_0.11.7_linux_amd64.zip
      - run:
          name: Terraform init
          command: ./terraform init -var app_name=$APP_NAME -var environment=$ENVIRONMENT -var local_key=$KEY_SSH ./mongodb
      - run:
          name: Terraform apply
          command: ./terraform apply --auto-approve -var app_name=$APP_NAME -var environment=$ENVIRONMENT -var local_key=$KEY_SSH ./mongodb
      - run:
          name:  Terraform destroy
          command: ./terraform destroy --auto-approve -var app_name=$APP_NAME -var environment=$ENVIRONMENT -var local_key=$KEY_SSH ./mongodb
          when: on_fail
  validator-infra:
      docker:
        - image: circleci/python:2.7-jessie-browsers
      steps:
        - checkout
        - add_ssh_keys:
            fingerprints:
              - "$KEY_ID"
        - run:
            name: Chmod to key
            command: chmod 400 $KEY_SSH
        - run:
            name: Install Ansible
            command: sudo pip install ansible
        - run:
            name: Install Boto
            command: sudo pip install boto
        - run:
            name: Chmod +x
            command: chmod +x ansible/inventory/ec2.py
        - run:
            name: Exec test
            command: cd ansible &&  ansible-playbook -i inventory/ec2.py test-after-install.yml --private-key=$KEY_SSH --extra-vars "tag_name_test=$TESTENAME"
  destroy-test-code:
    docker:
      - image: hashicorp/packer
    steps:
      - checkout
      - run:
          name: Download terraform
          command: wget https://releases.hashicorp.com/terraform/0.11.7/terraform_0.11.7_linux_amd64.zip
      - run:
          name: Unzip terraform binary
          command: unzip terraform_0.11.7_linux_amd64.zip
      - run:
          name: Init to clear test code
          command: ./terraform init -var app_name=$APP_NAME -var environment=$ENVIRONMENT -var local_key=$KEY_SSH ./mongodb
      - run:
          name: Destroy test code
          command: ./terraform destroy --auto-approve -var app_name=$APP_NAME -var environment=$ENVIRONMENT -var local_key=$KEY_SSH ./mongodb

workflows:
  version: 2
  test-code-will-git-mongodb:
    jobs:
      - test-code:
          filters:
            branches:
              only:
                - master
            tags:
              ignore: /.*/
      - validator-infra:
          requires:
            - test-code
          filters:
            branches:
              only:
                - master
            tags:
              ignore: /.*/
      - destroy-test-code:
          requires:
            - test-code
            - validator-infra
          filters:
            branches:
              only:
                - master
            tags:
              ignore: /.*/
